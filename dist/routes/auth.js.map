{"version":3,"sources":["../../server/routes/auth.js"],"names":["express","jwt","keys","User","router","Router","post","req","res","credentials","body","findOne","email","then","user","isValidPassword","password","json","toAuthJSON","status","errors","global","verify","token","JWT_SECRET","err"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,SAASJ,QAAQK,MAAR,EAAf;;AAEAD,OAAOE,IAAP,CAAY,GAAZ,EAAiB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC7B,QAAM,EAAEC,WAAF,KAAkBF,IAAIG,IAA5B;AACAP,OAAKQ,OAAL,CAAa,EAAEC,OAAOH,YAAYG,KAArB,EAAb,EAA2CC,IAA3C,CAAgDC,QAAQ;AACtD,QAAIA,QAAQA,KAAKC,eAAL,CAAqBN,YAAYO,QAAjC,CAAZ,EAAwD;AACtDR,UAAIS,IAAJ,CAAS,EAAEH,MAAMA,KAAKI,UAAL,EAAR,EAAT;AACD,KAFD,MAEO;AACLV,UAAIW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,EAAEG,QAAQ,EAAEC,QAAQ,qBAAV,EAAV,EAArB;AACD;AACF,GAND;AAOD,CATD;;AAWAjB,OAAOE,IAAP,CAAY,iBAAZ,EAA+B,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3CP,MAAIqB,MAAJ,CAAWf,IAAIG,IAAJ,CAASa,KAApB,EAA2BrB,KAAKsB,UAAhC,EAA4CC,OAAO;AACjD,QAAIA,GAAJ,EAAS;AACPjB,UAAIW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,EAArB;AACD,KAFD,MAEO;AACLT,UAAIS,IAAJ,CAAS,EAAT;AACD;AACF,GAND;AAOD,CARD;;AAUA,eAAeb,MAAf","file":"auth.js","sourcesContent":["import express from \"express\";\nimport jwt from \"jsonwebtoken\";\nimport keys from \"../config/keys\";\nimport User from \"../models/User\";\n\nconst router = express.Router();\n\nrouter.post(\"/\", (req, res) => {\n  const { credentials } = req.body;\n  User.findOne({ email: credentials.email }).then(user => {\n    if (user && user.isValidPassword(credentials.password)) {\n      res.json({ user: user.toAuthJSON() });\n    } else {\n      res.status(400).json({ errors: { global: \"Invalid credentials\" } });\n    }\n  });\n});\n\nrouter.post(\"/validate_token\", (req, res) => {\n  jwt.verify(req.body.token, keys.JWT_SECRET, err => {\n    if (err) {\n      res.status(401).json({});\n    } else {\n      res.json({});\n    }\n  });\n});\n\nexport default router;"]}